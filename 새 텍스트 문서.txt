
function map_init(z)
{
	zm = 1;
	rate = 5;		//oskim 20190613 , 지도격자	2km -> 5km
	xo = 0.0;
	yo = 0.0;
	//grid = 4.0;	//oskim 20190613
	grid = 4.0;
	GRID_SIZE = grid;
	mapslat1 = 30.0;
	mapslat2 = 60.0;
	mapolon = 126.0;
	mapolat = 38.0;
	
	zm_lvl = z;
	
	/*
	 * 모든 맵의 위경도가 1단계까지는 맞는데 2단계 이상으로 가면 xo,yo가 이상하게 추출되고
	 * 이때문에 위경도가 이상하게 표시되는 문제가 있다.
	 * (mapConvert.js / mapLgtConvert.js /mapSiteConvert.js 공통)
	 * (345./690.*coordinate_x-345./4.) / zm 수식을 수정해야 할 필요가 있음
	 */
//	console.log("zm_lvl : " + z);
	if (zm_lvl > 0) {
		for (var i=0; i<zm_lvl; i++) {
/*	//oskim 20190613, 사용하지 않는 코드 코멘트 처리			
//			coordinate_x = eval("x_"+i)-47;
//			coordinate_y = eval("y_"+i)-110;
			coordinate_x = eval("x_"+i);
			coordinate_y = eval("y_"+i);
			
			var addx = (345./690.*coordinate_x-345./4.) / zm;
			var addy = (345./690.*coordinate_y-345./4.) / zm;
			
			
			//1단계 확대시 지명및 위경도를 맞추기 위해 임의로 추가한 값
//			addx += 24;
//			addy += 55;
			
			xo += addx;
			yo += addy;
*/			
			zm *= 2;
		}
	}

	zm = (zm / rate) * GRID_SIZE;
	grid = grid/zm;
	
	PI = Math.asin(1.0)*2.0;
	DEGRAD = PI/180.0;
	RADDEG = 180.0/PI;

	re = Re/grid;
	slat1 = mapslat1 * DEGRAD;
	slat2 = mapslat2 * DEGRAD;
	olon = mapolon * DEGRAD;
	olat = mapolat * DEGRAD;

	sn = Math.tan(PI*0.25 + slat2*0.5)/Math.tan(PI*0.25 + slat1*0.5);
	sn = Math.log(Math.cos(slat1)/Math.cos(slat2))/Math.log(sn);
	sf = Math.tan(PI*0.25 + slat1*0.5);
	sf = Math.pow(sf,sn)*Math.cos(slat1)/sn;
	ro = Math.tan(PI*0.25 + olat*0.5);
	ro = re*sf/Math.pow(ro,sn);

	//xo = GRID_SIZE * (437 - xo) / grid;		//origin:175 , 5km 일때는 437
	//yo = GRID_SIZE * (510 - yo) / grid;		//origin:205 , 5km 일때는 510
	xo = GRID_SIZE * (66 - xo) / grid;	//oskim 20190613 , 66 값이 크면 행정명칭 우측 이동
	yo = GRID_SIZE * (163 - yo) / grid;	//oskim 20190613 , 163 값이 크면 행정명칭 올라간다.
	
//	console.log("xo : "+xo+" / yo : "+yo);

	map_first = 1;
}
